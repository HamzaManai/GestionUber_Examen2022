// <auto-generated />
using System;
using App.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App.ApplicationCore.Domain.Chauffeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float>("TauxBenefice")
                        .HasColumnType("real");

                    b.Property<string>("VoitureNumMat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("VoitureNumMat");

                    b.ToTable("Chauffeurs");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Client", b =>
                {
                    b.Property<string>("CIN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CIN");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Course", b =>
                {
                    b.Property<string>("VoitureId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateCourse")
                        .HasColumnType("datetime2");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<string>("LieuArrive")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LieuDepart")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<bool>("PaiementEnLigne")
                        .HasColumnType("bit");

                    b.HasKey("VoitureId", "ClientId", "DateCourse");

                    b.HasIndex("ClientId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Voiture", b =>
                {
                    b.Property<string>("NumMat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Couleur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Marque")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("NumMat");

                    b.ToTable("Voitures");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Chauffeur", b =>
                {
                    b.HasOne("App.ApplicationCore.Domain.Voiture", "Voiture")
                        .WithMany("Chauffeurs")
                        .HasForeignKey("VoitureNumMat");

                    b.Navigation("Voiture");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Course", b =>
                {
                    b.HasOne("App.ApplicationCore.Domain.Client", "Client")
                        .WithMany("Courses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.ApplicationCore.Domain.Voiture", "Voiture")
                        .WithMany("Courses")
                        .HasForeignKey("VoitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Voiture");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Client", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Voiture", b =>
                {
                    b.Navigation("Chauffeurs");

                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
